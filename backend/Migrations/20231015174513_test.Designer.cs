// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using buyC.Data;

#nullable disable

namespace buyC.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231015174513_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("buyC.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("buyC.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShoeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ShoeId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("buyC.Models.Shoe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Shoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 10, 15, 17, 45, 13, 565, DateTimeKind.Utc).AddTicks(3028),
                            Description = "A comfortable and durable running shoe.",
                            Image = "https://res.cloudinary.com/dtwnppsc6/image/upload/v1697391046/Air_Jordan_Legacy_312_a46xsf.webp",
                            Name = "Running Shoe 1",
                            Price = 99.989999999999995
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 10, 15, 17, 45, 13, 565, DateTimeKind.Utc).AddTicks(3030),
                            Description = "A stylish and comfortable casual shoe.",
                            Image = "https://res.cloudinary.com/dtwnppsc6/image/upload/v1697391046/Jumpman_MVP_vjjeul.webp",
                            Name = "Casual Shoe 2",
                            Price = 49.990000000000002
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 10, 15, 17, 45, 13, 565, DateTimeKind.Utc).AddTicks(3032),
                            Description = "A stylish and comfortable casual shoe.",
                            Image = "https://res.cloudinary.com/dtwnppsc6/image/upload/v1697391046/Jordan_Post_c5bsey.webp",
                            Name = "Casual Shoe 3",
                            Price = 49.990000000000002
                        });
                });

            modelBuilder.Entity("buyC.Models.Review", b =>
                {
                    b.HasOne("buyC.Models.Shoe", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ShoeId");
                });

            modelBuilder.Entity("buyC.Models.Shoe", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
